# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/997_Helper_Structures.ipynb.

# %% auto 0
__all__ = ['TaskPool', 'pool_guard']

# %% ../../nbs/997_Helper_Structures.ipynb 1
import asyncio
from asyncio import Task
from contextlib import asynccontextmanager
import anyio
from typing import Set, AsyncGenerator

# %% ../../nbs/997_Helper_Structures.ipynb 3
class TaskPool:
    def __init__(self, pool_size: int = 100_000):
        self.pool_size = pool_size
        self.pool: Set[Task] = set()

    async def add(self, item: Task) -> None:
        while len(self.pool) >= self.pool_size:
            await asyncio.sleep(0.1)
        self.pool.add(item)
        item.add_done_callback(self.pool.discard)

    def __len__(self) -> int:
        return len(self.pool)

# %% ../../nbs/997_Helper_Structures.ipynb 4
@asynccontextmanager
async def pool_guard(pool: TaskPool) -> AsyncGenerator[TaskPool, None]:
    try:
        yield pool
    finally:
        while len(pool) > 0:
            await asyncio.sleep(1)
