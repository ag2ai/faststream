# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/001_LocalKafkaBroker.ipynb.

# %% auto 0
__all__ = ['logger']

# %% ../../nbs/001_LocalKafkaBroker.ipynb 1
from unittest.mock import MagicMock

from aiokafka import AIOKafkaConsumer, AIOKafkaProducer

from .._components.meta import patch
from .._components.logger import get_logger

# %% ../../nbs/001_LocalKafkaBroker.ipynb 2
logger = get_logger(__name__)

# %% ../../nbs/001_LocalKafkaBroker.ipynb 14
def _patch_AIOKafkaConsumer_init(broker: LocalKafkaBroker) -> None:
    @patch
    def __init__(self: AIOKafkaConsumer, broker: LocalKafkaBroker = broker) -> None:
        logger.info("AIOKafkaConsumer patched __init__() called()")
        self.broker = broker

# %% ../../nbs/001_LocalKafkaBroker.ipynb 16
def _patch_AIOKafkaConsumer_start() -> None:
    @patch
    async def start(self: AIOKafkaConsumer) -> None:
        logger.info("AIOKafkaConsumer patched start() called()")

# %% ../../nbs/001_LocalKafkaBroker.ipynb 18
def _patch_AIOKafkaConsumer_subscribe() -> None:
    @patch
    def subscribe(self: AIOKafkaConsumer) -> None:
        logger.info("AIOKafkaConsumer patched subscribe() called!")

# %% ../../nbs/001_LocalKafkaBroker.ipynb 20
def _patch_AIOKafkaConsumer_stop() -> None:
    @patch
    async def stop(self: AIOKafkaConsumer) -> None:
        logger.info("AIOKafkaConsumer patched stop() called!")

# %% ../../nbs/001_LocalKafkaBroker.ipynb 22
def _patch_AIOKafkaConsumer_getmany() -> None:
    @patch
    async def getmany(self: AIOKafkaConsumer) -> None:
        logger.info("AIOKafkaConsumer patched getmany() called!")

# %% ../../nbs/001_LocalKafkaBroker.ipynb 24
def _patch_AIOKafkaConsumer(broker: LocalKafkaBroker) -> None:
    _patch_AIOKafkaConsumer_init(broker)
    _patch_AIOKafkaConsumer_start()
    _patch_AIOKafkaConsumer_subscribe()
    _patch_AIOKafkaConsumer_stop()
    _patch_AIOKafkaConsumer_getmany()

# %% ../../nbs/001_LocalKafkaBroker.ipynb 27
def _patch_AIOKafkaProducer_init(broker: LocalKafkaBroker) -> None:
    @patch
    def __init__(self: AIOKafkaProducer, broker: LocalKafkaBroker = broker) -> None:
        logger.info("AIOKafkaProducer patched __init__() called()")
        self.broker = broker

# %% ../../nbs/001_LocalKafkaBroker.ipynb 29
def _patch_AIOKafkaProducer_start() -> None:
    @patch
    async def start(self: AIOKafkaProducer) -> None:
        logger.info("AIOKafkaProducer patched start() called()")

# %% ../../nbs/001_LocalKafkaBroker.ipynb 31
def _patch_AIOKafkaProducer_stop() -> None:
    @patch
    async def stop(self: AIOKafkaProducer) -> None:
        logger.info("AIOKafkaProducer patched stop() called()")

# %% ../../nbs/001_LocalKafkaBroker.ipynb 33
def _patch_AIOKafkaProducer_send() -> None:
    @patch
    async def send(self: AIOKafkaProducer) -> None:
        logger.info("AIOKafkaProducer patched send() called()")

# %% ../../nbs/001_LocalKafkaBroker.ipynb 35
def _patch_AIOKafkaProducer(broker: LocalKafkaBroker) -> None:
    _patch_AIOKafkaProducer_init(broker)
    _patch_AIOKafkaProducer_start()
    _patch_AIOKafkaProducer_stop()
    _patch_AIOKafkaProducer_send()
