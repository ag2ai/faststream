# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/010_Internal_Helpers.ipynb.

# %% auto 0
__all__ = ['logger', 'T', 'F', 'in_notebook', 'combine_params', 'delegates_using_docstring']

# %% ../../nbs/010_Internal_Helpers.ipynb 2
def in_notebook():
    try:
        from IPython import get_ipython

        if "IPKernelApp" not in get_ipython().config:
            return False
    except ImportError:
        return False
    except AttributeError:
        return False
    return True

# %% ../../nbs/010_Internal_Helpers.ipynb 4
from functools import wraps
from inspect import signature
import textwrap
from typing import *

import docstring_parser
from fastcore.meta import delegates

if in_notebook():
    from tqdm.notebook import tqdm, trange
else:
    from tqdm import tqdm, trange

from .logger import get_logger, supress_timestamps

# %% ../../nbs/010_Internal_Helpers.ipynb 6
logger = get_logger(__name__)

# %% ../../nbs/010_Internal_Helpers.ipynb 8
T = TypeVar("T")
F = TypeVar("F", bound=Callable[..., Any])


def combine_params(o: Union[Type, Callable[..., Any]]) -> Callable[[F], F]:
    def _combine_params(f: F) -> F:
        src_params = docstring_parser.parse_from_object(o).params
        docs = docstring_parser.parse_from_object(f)
        dst_params_names = [p.arg_name for p in docs.params]
        combined_params = docs.params + [
            x for x in src_params if not x.arg_name in dst_params_names
        ]

        docs.meta = [
            x for x in docs.meta if not isinstance(x, docstring_parser.DocstringParam)
        ] + combined_params  # type: ignore

        f.__doc__ = docstring_parser.compose(
            docs, style=docstring_parser.DocstringStyle.GOOGLE
        )
        return f

    return _combine_params

# %% ../../nbs/010_Internal_Helpers.ipynb 11
def delegates_using_docstring(o: Union[Type, Callable[..., Any]]) -> Callable[[F], F]:
    def _delegates_using_docstring(f: F) -> F:
        @combine_params(o)
        @delegates(o)
        @wraps(f)
        def _f(*args, **kwargs):
            return f(*args, **kwargs)

        return _f  # type: ignore

    return _delegates_using_docstring
