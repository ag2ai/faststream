name: CI
on:  [workflow_dispatch, push]

jobs:
  mypy_static_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: airtai/workflows/airt-mypy-check@main
  bandit_static_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: airtai/workflows/airt-bandit-check@main
  semgrep_static_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: airtai/workflows/airt-semgrep-check@main
  test:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os:  [ubuntu, windows]
        version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      # - run: docker pull docker.redpanda.com/redpandadata/redpanda:v23.1.2
      # - run: docker run -d --rm --name redpanda_9092 -p 9092:9092 docker.redpanda.com/redpandadata/redpanda:v23.1.2 redpanda start --kafka-addr internal://0.0.0.0:9090,external://0.0.0.0:9092 --advertise-kafka-addr internal://localhost:9090,external://localhost:9092 --smp 1 --memory 1G --mode dev-container --default-log-level debug
      # - run: sleep 10
      # - run: docker logs redpanda_9092
      - name: Install quarto
        uses: quarto-dev/quarto-actions/setup@v2
        # run: |
        #   wget -q https://www.quarto.org/download/latest/quarto-linux-amd64.deb
        #   sudo dpkg -i quarto-linux-amd64.deb
      - run: |
          quarto --version
      - name: Prepare nbdev env
        uses: fastai/workflows/nbdev-ci@master
        with:
          version: ${{ matrix.version }}
          skip_test: true
      - name: Install testing deps
        run: |
          fastkafka docs install_deps
          fastkafka testing install_deps
      - name:  Install
        run:   |
                if [ "$RUNNER_OS" == "Linux" ]; then
                    nbdev_test --timing --do_print
                elif [ "$RUNNER_OS" == "Windows" ]; then
                    nbdev_test --n_workers 1 --timing --do_print --pause 1
                else
                    echo "$RUNNER_OS not supported"
                    exit 1
                fi
        shell: bash
      # - name: Run nbdev tests
      #   run: |
      #     nbdev_test --timing --do_print
      - name: Test building docs with nbdev-mkdocs
        run: |
          nbdev_mkdocs docs
          if [ -f "mkdocs/site/index.html" ]; then
            echo "docs built successfully."
          else
            echo "index page not found in rendered docs."
            ls -la
            ls -la mkdocs/site/
            exit 1
          fi
