name: Run all tests

on:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
  # https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue#triggering-merge-group-checks-with-github-actions
  merge_group:
    types:
      - checks_requested

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read
  pull-requests: read

jobs:
  test-basic:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        pydantic-version: ["pydantic-v1", "pydantic-v2"]
      fail-fast: false

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-uv
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Install Pydantic v1
        if: matrix.pydantic-version == 'pydantic-v1'
        run: uv pip install --system "pydantic>=1.10.0,<2.0.0"
      - name: Install Pydantic v2
        if: matrix.pydantic-version == 'pydantic-v2'
        run: uv pip install --system --prerelease=disallow "pydantic>=2.0.0,<3.0.0"
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and not connected) or not connected"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.pydantic-version }}
      - name: Store coverage files
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: .coverage.${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.pydantic-version }}
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  test-macos-latest:
    if: github.event.pull_request.draft == false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and not connected) or not connected"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.macos-latest
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: .coverage.macos-latest
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  test-windows-latest:
    if: github.event.pull_request.draft == false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and not connected) or not connected"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.windows-latest
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: .coverage.windows-latest
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  test-kafka-smoke:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto
          -vv -m "kafka and not connected"

  test-kafka-real:
    if: github.event.pull_request.draft == false
    needs:
      - test-basic
      - test-kafka-smoke
    runs-on: ubuntu-latest
    services:
      kafka:
        image: bitnami/kafka:3.5.0
        ports:
          - 9092:9092
        env:
          KAFKA_ENABLE_KRAFT: "true"
          KAFKA_CFG_NODE_ID: "1"
          KAFKA_CFG_PROCESS_ROLES: "broker,controller"
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
          KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
          KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://127.0.0.1:9092"
          KAFKA_BROKER_ID: "1"
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
          ALLOW_PLAINTEXT_LISTENER: "true"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and kafka and connected) or (kafka and connected)"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.kafka-py
      - name: Store coverage files
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: .coverage.kafka-py
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  test-confluent-smoke:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto
          -vv -m "confluent and not connected"

  test-confluent-real:
    if: github.event.pull_request.draft == false
    needs:
      - test-basic
      - test-confluent-smoke
    runs-on: ubuntu-latest
    services:
      kafka:
        image: bitnami/kafka:3.5.0
        ports:
          - 9092:9092
        env:
          KAFKA_ENABLE_KRAFT: "true"
          KAFKA_CFG_NODE_ID: "1"
          KAFKA_CFG_PROCESS_ROLES: "broker,controller"
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
          KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
          KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://127.0.0.1:9092"
          KAFKA_BROKER_ID: "1"
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
          ALLOW_PLAINTEXT_LISTENER: "true"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and confluent and connected) or (confluent and connected)"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.confluent-py
      - name: Store coverage files
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: .coverage.confluent-py
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  test-rabbit-smoke:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto
          -vv -m "rabbit and not connected"

  test-rabbit-real:
    if: github.event.pull_request.draft == false
    needs:
      - test-basic
      - test-rabbit-smoke
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:alpine
        ports:
          - 5672:5672
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and rabbit and connected) or (rabbit and connected)"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.rabbit-py
      - name: Store coverage files
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: .coverage.rabbit-py
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  test-nats-smoke:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto
          -vv -m "nats and not connected"

  test-nats-real:
    if: github.event.pull_request.draft == false
    needs:
      - test-basic
      - test-nats-smoke
    runs-on: ubuntu-latest
    services:
      nats:
        image: diementros/nats:js
        ports:
          - 4222:4222
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and nats and connected) or (nats and connected)"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.nats-py
      - name: Store coverage files
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: .coverage.nats-py
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  test-redis-smoke:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto
          -vv -m "redis and not connected"

  test-redis-real:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs:
      - test-basic
      - test-redis-smoke
    services:
      nats:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          uv pip install --system --group optionals --group testing .
      - name: Test
        run: >
          pytest -n auto --cov --cov-report=
          -vv -m "(slow and redis and connected) or (redis and connected)"
      - name: Rename coverage file
        run: mkdir coverage && mv .coverage coverage/.coverage.redis-py
      - name: Store coverage files
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: .coverage.redis-py
          path: coverage
          if-no-files-found: error
          include-hidden-files: true

  coverage-combine:
    if: github.event.pull_request.draft == false
    needs:
      - test-basic
      - test-macos-latest
      - test-windows-latest
      - test-kafka-real
      - test-confluent-real
      - test-rabbit-real
      - test-nats-real
      - test-redis-real
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: "latest"
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.12"

      - name: Get coverage files
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: .coverage*
          path: coverage
          merge-multiple: true

      - run: |
          uv pip install --system coverage[toml] covdefaults

      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "FastStream coverage for ${{ github.sha }}"

      - name: Store coverage html
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage-html
          path: htmlcov

  # https://github.com/marketplace/actions/alls-green#why
  check: # This job does nothing and is only used for the branch protection
    # from: https://github.com/re-actors/alls-green
    # Important: For this to work properly, it is a must to have the job always
    # run, otherwise GitHub will make it skipped when any of the dependencies
    # fail. In some contexts, skipped is interpreted as success which may lead
    # to undesired, unobvious and even dangerous (as in security breach
    # "dangerous") side-effects.
    if: always()

    needs:
      - coverage-combine
      - test-macos-latest
      - test-windows-latest

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
